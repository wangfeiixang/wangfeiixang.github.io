{"version":3,"sources":["actions/index.js","components/About.js","components/Home.js","components/Contact.js","router.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["idNum","addTodo","text","isTrue","num","type","id","completed","About","react_default","a","createElement","style","padding","color","fontSize","this","props","match","params","React","Component","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addItem","todos","length","items","i","state","inputVal","dispatch","setState","val","_this2","input","onChange","e","upLoad","target","value","width","marginRight","es_button","onClick","withRouter","connect","result","obj","push","Contact","User","_ref2","console","log","username","router","Switch","Route","exact","path","component","sensitive","render","_ref","App","visible","updateInput","showModal","handleOk","handleCancel","data","clickFun","name","Link","display","marginBottom","to","pathname","src_router","map","item","key","margin","textAlign","textDecoration","selectChange","Boolean","window","location","hostname","todoApp","combineReducers","arguments","undefined","action","concat","toConsumableArray","store","createStore","rootReducer","ReactDOM","es","HashRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd1100fb.chunk.js","sourcesContent":["let idNum = 0\r\n\r\nexport const addTodo = (text, isTrue, num) => {\r\n  if (text && text !== '') {\r\n    return {\r\n      type: 'ADD_TODO',\r\n      id: num === -1 ? idNum++ : num,\r\n      text,\r\n      completed: isTrue\r\n    }\r\n  } else {\r\n    return {\r\n      type: 'ERROR'\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nclass About extends React.Component {\r\n  render () {\r\n    // console.log('match--params--', this)\r\n    return (\r\n      <div style={{ padding: '20px', color: 'purple', fontSize: '20px' }}>\r\n        About组件:{this.props.match.params.id}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About\r\n","/*eslint no-useless-constructor: \"error\"*/\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nimport { Input, Button } from 'antd'\r\n\r\nclass Home extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      inputVal: ''\r\n    }\r\n    // applyAddItem = () => {\r\n    //   this.props.addItem()\r\n    // }\r\n  }\r\n\r\n  componentDidMount () {\r\n    // console.log('componentDidMount--', this.props)\r\n  }\r\n\r\n  addItem = () => {\r\n    if (this.props.todos.length) {\r\n      let items = this.props.todos\r\n      for (let i = 0; i < items.length; i++) {\r\n        if (items[i].text === this.state.inputVal) {\r\n          return\r\n        }\r\n      }\r\n      this.props.dispatch(addTodo(this.state.inputVal, false, -1))\r\n      this.setState({ inputVal: '' })\r\n    } else {\r\n      this.props.dispatch(addTodo(this.state.inputVal, false, -1))\r\n      this.setState({ inputVal: '' })\r\n    }\r\n  };\r\n\r\n  upLoad (val) {\r\n    this.setState({\r\n      inputVal: val\r\n    })\r\n  }\r\n\r\n  render () {\r\n    // console.log('home--render--', this.props)\r\n    return (\r\n      <div style={{ padding: '20px', color: 'skyblue', fontSize: '20px' }}>\r\n        Home组件\r\n        <div>\r\n          <p>\r\n            <Input\r\n              onChange={e => this.upLoad(e.target.value)}\r\n              value={this.state.inputVal}\r\n              style={{ width: '300px', marginRight: '10px' }}\r\n            />\r\n            <Button type=\"primary\" onClick={() => this.addItem()}>\r\n              添加\r\n            </Button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // 去重多余项\r\n  let result = []\r\n  let obj = {}\r\n  for (let i =0; i<state.todos.length; i++) {\r\n    if (!obj[state.todos[i].id]) {\r\n      result.push(state.todos[i])\r\n      obj[state.todos[i].id] = true\r\n    }\r\n  }\r\n  return {\r\n    todos: result\r\n  }\r\n}\r\n\r\n// export default connect(\r\n//   null,\r\n//   { addTodo }\r\n// )(Home)\r\n\r\nexport default withRouter(connect(mapStateToProps)(Home))\r\n","import React from 'react'\r\n\r\nclass Contact extends React.Component {\r\n  render () {\r\n    return (\r\n      <div style={{ padding: '20px', color: 'gold', fontSize: '20px' }}>\r\n        Contact组件\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\n// import { Route, Switch, Redirect } from 'react-router-dom'\r\n\r\nimport About from './components/About.js'\r\nimport Home from './components/Home.js'\r\nimport Contact from './components/Contact.js'\r\n\r\n// class router extends React.Component {\r\n//   render () {\r\n//     return (\r\n//       <Switch>\r\n//         <Route exact path=\"/\" component={Home} />\r\n//         <Route path=\"/about\" component={About} />\r\n//         <Route path=\"/contact\" component={Contact} />\r\n//         <Redirect to=\"/\" />\r\n//       </Switch>\r\n//     )\r\n//   }\r\n// }\r\n\r\nconst router = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/about/:id\" component={About} />\r\n    <Route sensitive path=\"/contact\" component={Contact} />\r\n    <Route path=\"/user:username\" component={User} />\r\n    <Route\r\n      path=\"/render/:id\"\r\n      render={({ match }) => <div>render组件：{match.params.id}</div>}\r\n    />\r\n    {/* <Redirect to=\"/\" /> */}\r\n  </Switch>\r\n)\r\n\r\nfunction User ({ match }) {\r\n  console.log('User--', match)\r\n  return <h1>Hello---{match.params.username}!</h1>\r\n}\r\n\r\nexport default router\r\n","// import React, { Component } from 'react'\r\n// // import logo from './logo.svg'\r\n// import './App.css'\r\n// // import DangerButton from './components/DangerButton.js'\r\n// // import logo from './images/logo_header.png'\r\n// function Welcome (props) {\r\n//   return <h1>Hello, {props.name}</h1>\r\n// }\r\n\r\n// function increment (state, props) {\r\n//   return {num: state.num + 1}\r\n// }\r\n\r\n// // const style={\r\n// //   color:'pink'\r\n// // }\r\n// class App extends Component {\r\n//   constructor (props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       msg: '111',\r\n//       num: 0,\r\n//       id: 110,\r\n//       idShow: true,\r\n//       mapList: [\r\n//         '张三', '李四'\r\n//       ]\r\n//     }\r\n//     // this.clickFun = this.clickFun.bind(this)\r\n//     // this.handleChange = this.handleChange.bind(this)\r\n//   }\r\n//   total = 10\r\n//   incrementMultiple () {\r\n//     this.setState(increment)\r\n//     this.setState(increment)\r\n//     this.setState(increment)\r\n//     // this.setState()\r\n//     console.log('incrementMultiple--', this.state)\r\n//   }\r\n\r\n//   componentDidMount () {\r\n//     let _this = this\r\n//     _this.incrementMultiple()\r\n//     // _this.setState(increment)\r\n//     // console.log('1-->>', _this.state.num)\r\n//     // _this.setState(increment)\r\n//     // console.log('2-->>', _this.state.num)\r\n//     // _this.setState(increment)\r\n//     // console.log('3-->>', _this.state.num)\r\n//     // setTimeout(function () {\r\n//     //   // console.log('before--1--', _this.state.num)\r\n//     //   _this.setState({\r\n//     //     num: _this.state.num + 1\r\n//     //   })\r\n//     //   console.log('setTimeout--3-->>', _this.state.num)\r\n//     // }, 0)\r\n//     // setTimeout(function () {\r\n//     //   // console.log('before--2--', _this.state.num)\r\n//     //   _this.setState({\r\n//     //     num: _this.state.num + 1\r\n//     //   })\r\n//     //   console.log('setTimeout--4-->>', _this.state.num)\r\n//     // }, 0)\r\n//     console.log('componentDidMount--', _this.state.num)\r\n//   }\r\n//   componentWillUnmount () {\r\n//     console.log('componentWillUnmount--')\r\n//   }\r\n//   // 箭头函数\r\n//   // clickFun (that) {\r\n//   //   console.log('this--', that)\r\n//   //   that.setState({\r\n//   //     msg: 'clickFun'\r\n//   //   })\r\n//   // }\r\n\r\n//   // bind方法\r\n//   clickFun () {\r\n//     console.log('this--', this)\r\n//     this.setState({\r\n//       msg: 'clickFun--bind'\r\n//     })\r\n//   }\r\n//   // 传递参数方法\r\n//   paramsFun (id) {\r\n//     console.log('paramsFun--id--', id)\r\n//   }\r\n\r\n//   handleChange (e) {\r\n//     console.log('handleChange--', e, 'value--', e.target.value)\r\n//     // this.total = e.target.value\r\n//     this.setState({\r\n//       num: e.target.value\r\n//     })\r\n//   }\r\n//   handleChange1 (e) {\r\n//     this.setState({\r\n//       num: ++e.target.value\r\n//     })\r\n//     console.log('handleChange1--', e.target.value,'num--', this.state.num)\r\n//   }\r\n//   render () {\r\n//     console.log('render--', this.state.num)\r\n//     let html\r\n//     if (this.state.idShow) {\r\n//       html = <div>\r\n//         <p onClick={(e)=>this.paramsFun(this.state.id, e)} style={{color: 'skyblue', fontSize: '20px', padding: '10px 0'}}>箭头函数--传递参数方法</p>\r\n//         <p>idShow:{this.state.idShow ? 'true' : 'false'}</p>\r\n//       </div>\r\n//     } else {\r\n//       html = <p>idShow:{this.state.idShow ? 'true' : 'false'}</p>\r\n//     }\r\n//     return (\r\n//       <div>\r\n//         <Welcome name=\"Sara\" />\r\n//         {/* <p onClick={this.clickFun} style={{color:'pink'}}>{this.state.msg}</p> */}\r\n//         <p onClick={()=>this.clickFun()} style={{color:'pink'}}>{this.state.msg}</p>\r\n//         {/* <p onClick={this.paramsFun.bind(this,this.state.id)}>bind--传递参数方法</p> */}\r\n//         {html}\r\n//         {/* <p onClick={(e)=>this.paramsFun(this.state.id, e)} style={{color: 'skyblue', fontSize: '20px', padding: '10px 0'}}>箭头函数--传递参数方法</p> */}\r\n//         {/* react--{this.state.num} */}\r\n\r\n//         {\r\n//           this.state.idShow ? <p>state--true</p> : <p>state--false</p>\r\n//         }\r\n\r\n//         <ul>\r\n//           {\r\n//             this.state.mapList.map((items, index) => {\r\n//               return (<li key={index}>{items}</li>)\r\n//             })\r\n//           }\r\n//         </ul>\r\n//         <div style={{padding: '20px'}}>\r\n//           {this.total} <input style={{padding: '5px', border: '1px solid #eee'}} value={this.state.num} type=\"text\" onChange={(e)=> this.handleChange(e)}/>\r\n//           {/* <select  style={{padding: '5px',color: '#333', border: '1px solid #eee'}} >\r\n//             <option value=\"22\">22</option>\r\n//             <option value=\"33\">33</option>\r\n//           </select> */}\r\n//           {/*  onChange={(e)=> this.handleChange(e)} */}\r\n//           {/*  onChange={ this.handleChange } */}\r\n//           <p>----------------------</p>\r\n//           <input style={{padding: '5px', border: '1px solid #eee'}} value={this.state.num} type=\"text\" onChange={(e)=> this.handleChange1(e)}/>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default App\r\n\r\nimport React from 'react'\r\nimport 'antd/dist/antd.css'\r\n// import { Modal, message, Button } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from './actions'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport { Input, Button } from 'antd'\r\n\r\n// import { Route, Switch,Redirect,Link  } from 'react-router-dom'\r\n\r\n// import About from './components/About.js'\r\n// import Home from './components/Home.js'\r\n// import Contact from './components/Contact.js'\r\n\r\nimport Myrouter from './router'\r\nclass App extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      input: ''\r\n    }\r\n  }\r\n\r\n  addItem () {\r\n    if (this.props.todos.length) {\r\n      let items = this.props.todos\r\n      for (let i = 0; i < items.length; i++) {\r\n        if (items[i].text === this.state.input) {\r\n          return\r\n        }\r\n      }\r\n      this.props.dispatch(addTodo(this.state.input, false, -1))\r\n      this.setState({ input: '' })\r\n    } else {\r\n      this.props.dispatch(addTodo(this.state.input, false, -1))\r\n      this.setState({ input: '' })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  state = { visible: false };\r\n  id = 100;\r\n\r\n  // input change事件\r\n  updateInput = input => {\r\n    this.setState({ input })\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    })\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log('handleOk--', e)\r\n    this.setState({\r\n      visible: false\r\n    })\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log('handleCancel--', e)\r\n    this.setState({\r\n      visible: false\r\n    })\r\n  };\r\n\r\n  info () {\r\n    // message.info('This is a normal message')\r\n  }\r\n\r\n  clickFun () {\r\n    console.log('clickFun--')\r\n  }\r\n\r\n  // select 选中\r\n  selectChange (data) {\r\n    data.completed = data.completed ? false : true\r\n    this.props.dispatch(addTodo(data.text, data.completed, data.id))\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1 onClick={this.clickFun}>Hello, {this.props.name}</h1>\r\n        {/* <Button type=\"primary\" onClick={this.info}>Display normal message</Button>\r\n      <Button onClick={this.showModal}>打开弹框</Button> */}\r\n        {/* <Modal\r\n        title=\"Basic Modal\"\r\n        visible={this.state.visible}\r\n        onOk={this.handleOk}\r\n        onCancel={this.handleCancel}\r\n      >\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Modal> */}\r\n        <div style={{ padding: '20px', fontSize: '20px', color: '#000' }}>\r\n          <Link\r\n            style={{ display: 'block', width: '120px', marginBottom: '5px' }}\r\n            to=\"/\"\r\n          >\r\n            home\r\n          </Link>\r\n          <Link\r\n            style={{ display: 'block', width: '120px', marginBottom: '5px' }}\r\n            to={{ pathname: '/about/' + this.id }}\r\n          >\r\n            about\r\n          </Link>\r\n          <Link\r\n            style={{ display: 'block', width: '120px', marginBottom: '5px' }}\r\n            to=\"/contact\"\r\n          >\r\n            contact\r\n          </Link>\r\n          <p>\r\n            <Input\r\n              onChange={e => this.updateInput(e.target.value)}\r\n              value={this.state.input}\r\n              style={{ width: '300px', marginRight: '10px' }}\r\n            />\r\n            <Button type=\"primary\" onClick={() => this.addItem()}>\r\n              添加\r\n            </Button>\r\n          </p>\r\n        </div>\r\n        <Myrouter addItem={this.addItem} />\r\n        <div style={{ padding: '20px', color: 'purple' }}>\r\n          {this.props.todos.length ? (\r\n            this.props.todos.map((item, i) => {\r\n              return (\r\n                <p key={i} style={{ margin: '0 0 5px 20px',width: '100px', textAlign: 'center',textDecoration:item.completed ? 'line-through': 'none' }} onClick={(e) => this.selectChange(item)}>\r\n                  {item.id+1}、 {item.text}\r\n                </p>\r\n              )\r\n            })\r\n          ) : (\r\n            <p style={{ color: '#333' }}>暂无数据</p>\r\n          )}\r\n        </div>\r\n        {/* <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"/contact\" component={Contact} />\r\n        <Redirect to=\"/\" />\r\n      </Switch> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // 去重多余项\r\n  let result = []\r\n  let obj = {}\r\n  for (let i =0; i<state.todos.length; i++) {\r\n    if (!obj[state.todos[i].id]) {\r\n      result.push(state.todos[i])\r\n      obj[state.todos[i].id] = true\r\n    }\r\n  }\r\n  return {\r\n    todos: result\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(App))\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nconst todos = (state = [], action) => {\r\n  if (action.type === 'ADD_TODO' && action.text) {\r\n    return [\r\n      ...state,\r\n      {\r\n        id: action.id,\r\n        text: action.text,\r\n        completed: action.completed\r\n      }\r\n    ]\r\n\r\n  } else {\r\n    return state\r\n  }\r\n}\r\n\r\nconst todoApp = combineReducers({\r\n  todos\r\n})\r\n\r\nexport default todoApp\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n// import { BrowserRouter } from 'react-router-dom'\nimport { HashRouter } from 'react-router-dom'\n\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\n// import { addTodo } from './actions'\n\nconst store = createStore(rootReducer)\n\n// console.log('app--store--before--', store, 'getState--', store.getState())\n\n// store.dispatch(addTodo('Learn about actions'))\n\n// console.log('app--store--after--', store, 'getState--', store.getState())\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <BrowserRouter>\n      <App />\n    </BrowserRouter> */}\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}